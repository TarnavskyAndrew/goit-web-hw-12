"""add role to users

Revision ID: a1eab1d261de
Revises: 77901342b859
Create Date: 2025-08-26 20:59:48.150949

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "a1eab1d261de"
down_revision: Union[str, Sequence[str], None] = "77901342b859"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column("role", sa.String(length=20), server_default="user", nullable=False),
    )
    op.alter_column(
        "users",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
        server_default=sa.text("now()"),
    )
    op.drop_constraint(op.f("users_email_key"), "users", type_="unique")
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.create_unique_constraint(
        op.f("users_email_key"), "users", ["email"], postgresql_nulls_not_distinct=False
    )
    op.alter_column(
        "users",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
        server_default=None,
    )
    op.drop_column("users", "role")
    # ### end Alembic commands ###
